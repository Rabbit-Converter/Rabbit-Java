package org.rabbitconverter.rabbit;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import org.json.JSONArray;
import org.json.JSONObject;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;

/*
 * This Java source file was auto generated by running 'gradle init --type java-library'
 * by 'yelinaung' at '7/10/15 12:18 AM' with Gradle 2.4
 *
 * @author yelinaung, @date 7/10/15 12:18 AM
 */
public class RabbitTest {

  private String ZG = "zg";
  private String UNI = "uni";

  private JSONObject readJsonFromFile() {
    try {
      return new JSONObject(new String(Files.readAllBytes(
          Paths.get(System.getProperty("user.dir") + "/src/test/java/" + "samples.json"))));
    } catch (IOException e) {
      e.printStackTrace();
    }

    return null;
  }

  @Test public void testUni2Zg() {
    JSONObject jsonObj = readJsonFromFile();
    if (jsonObj != null) {
      JSONArray zgArray = jsonObj.getJSONArray(ZG);
      for (int i = 0; i < zgArray.length(); i++) {
        assertEquals(zgArray.get(i), Rabbit.uni2zg((String) jsonObj.getJSONArray(UNI).get(i)));
      }
    }
  }

  @Test public void testZg() {
    JSONObject jsonObj = readJsonFromFile();
    if (jsonObj != null) {
      JSONArray uniArray = jsonObj.getJSONArray(UNI);
      for (int i = 0; i < uniArray.length(); i++) {
        assertEquals(uniArray.get(i), Rabbit.zg2uni((String) jsonObj.getJSONArray(ZG).get(i)));
      }
    }
  }

  @Test public void testTrivial() {
    assertNull(Rabbit.uni2zg(null));
    assertNull(Rabbit.zg2uni(null));
    assertEquals(Rabbit.uni2zg(""), "");
    assertEquals(Rabbit.zg2uni(""), "");
  }
}
